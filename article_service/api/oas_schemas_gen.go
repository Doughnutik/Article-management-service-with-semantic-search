// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"
)

// Ref: #/components/schemas/Article
type Article struct {
	ID        OptInt      `json:"id"`
	Title     OptString   `json:"title"`
	Content   OptString   `json:"content"`
	Author    OptString   `json:"author"`
	UpdatedAt OptDateTime `json:"updated_at"`
	Tags      []string    `json:"tags"`
}

// GetID returns the value of ID.
func (s *Article) GetID() OptInt {
	return s.ID
}

// GetTitle returns the value of Title.
func (s *Article) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *Article) GetContent() OptString {
	return s.Content
}

// GetAuthor returns the value of Author.
func (s *Article) GetAuthor() OptString {
	return s.Author
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *Article) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetTags returns the value of Tags.
func (s *Article) GetTags() []string {
	return s.Tags
}

// SetID sets the value of ID.
func (s *Article) SetID(val OptInt) {
	s.ID = val
}

// SetTitle sets the value of Title.
func (s *Article) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *Article) SetContent(val OptString) {
	s.Content = val
}

// SetAuthor sets the value of Author.
func (s *Article) SetAuthor(val OptString) {
	s.Author = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *Article) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetTags sets the value of Tags.
func (s *Article) SetTags(val []string) {
	s.Tags = val
}

func (*Article) articlesIDGetRes() {}
func (*Article) articlesIDPutRes() {}
func (*Article) articlesPostRes()  {}

// Ref: #/components/schemas/ArticleCreate
type ArticleCreate struct {
	Title   string   `json:"title"`
	Content string   `json:"content"`
	Author  string   `json:"author"`
	Tags    []string `json:"tags"`
}

// GetTitle returns the value of Title.
func (s *ArticleCreate) GetTitle() string {
	return s.Title
}

// GetContent returns the value of Content.
func (s *ArticleCreate) GetContent() string {
	return s.Content
}

// GetAuthor returns the value of Author.
func (s *ArticleCreate) GetAuthor() string {
	return s.Author
}

// GetTags returns the value of Tags.
func (s *ArticleCreate) GetTags() []string {
	return s.Tags
}

// SetTitle sets the value of Title.
func (s *ArticleCreate) SetTitle(val string) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *ArticleCreate) SetContent(val string) {
	s.Content = val
}

// SetAuthor sets the value of Author.
func (s *ArticleCreate) SetAuthor(val string) {
	s.Author = val
}

// SetTags sets the value of Tags.
func (s *ArticleCreate) SetTags(val []string) {
	s.Tags = val
}

// Ref: #/components/schemas/ArticleUpdate
type ArticleUpdate struct {
	Title   OptString `json:"title"`
	Content OptString `json:"content"`
	Author  OptString `json:"author"`
	Tags    []string  `json:"tags"`
}

// GetTitle returns the value of Title.
func (s *ArticleUpdate) GetTitle() OptString {
	return s.Title
}

// GetContent returns the value of Content.
func (s *ArticleUpdate) GetContent() OptString {
	return s.Content
}

// GetAuthor returns the value of Author.
func (s *ArticleUpdate) GetAuthor() OptString {
	return s.Author
}

// GetTags returns the value of Tags.
func (s *ArticleUpdate) GetTags() []string {
	return s.Tags
}

// SetTitle sets the value of Title.
func (s *ArticleUpdate) SetTitle(val OptString) {
	s.Title = val
}

// SetContent sets the value of Content.
func (s *ArticleUpdate) SetContent(val OptString) {
	s.Content = val
}

// SetAuthor sets the value of Author.
func (s *ArticleUpdate) SetAuthor(val OptString) {
	s.Author = val
}

// SetTags sets the value of Tags.
func (s *ArticleUpdate) SetTags(val []string) {
	s.Tags = val
}

type ArticlesGetOKApplicationJSON []Article

func (*ArticlesGetOKApplicationJSON) articlesGetRes() {}

// ArticlesIDDeleteNoContent is response for ArticlesIDDelete operation.
type ArticlesIDDeleteNoContent struct{}

func (*ArticlesIDDeleteNoContent) articlesIDDeleteRes() {}

type ArticlesSearchPostOKApplicationJSON []Article

func (*ArticlesSearchPostOKApplicationJSON) articlesSearchPostRes() {}

// Ref: #/components/responses/BadRequest
type BadRequest struct{}

func (*BadRequest) articlesGetRes()        {}
func (*BadRequest) articlesIDDeleteRes()   {}
func (*BadRequest) articlesIDGetRes()      {}
func (*BadRequest) articlesIDPutRes()      {}
func (*BadRequest) articlesPostRes()       {}
func (*BadRequest) articlesSearchPostRes() {}

// Ref: #/components/responses/InternalServerError
type InternalServerError struct{}

func (*InternalServerError) articlesGetRes()        {}
func (*InternalServerError) articlesIDDeleteRes()   {}
func (*InternalServerError) articlesIDGetRes()      {}
func (*InternalServerError) articlesIDPutRes()      {}
func (*InternalServerError) articlesPostRes()       {}
func (*InternalServerError) articlesSearchPostRes() {}

// Ref: #/components/responses/NotFound
type NotFound struct{}

func (*NotFound) articlesIDDeleteRes() {}
func (*NotFound) articlesIDGetRes()    {}
func (*NotFound) articlesIDPutRes()    {}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/SearchRequest
type SearchRequest struct {
	// Текстовый запрос для семантического поиска.
	Query string `json:"query"`
	// Максимальное количество статей для возврата.
	Limit OptInt `json:"limit"`
}

// GetQuery returns the value of Query.
func (s *SearchRequest) GetQuery() string {
	return s.Query
}

// GetLimit returns the value of Limit.
func (s *SearchRequest) GetLimit() OptInt {
	return s.Limit
}

// SetQuery sets the value of Query.
func (s *SearchRequest) SetQuery(val string) {
	s.Query = val
}

// SetLimit sets the value of Limit.
func (s *SearchRequest) SetLimit(val OptInt) {
	s.Limit = val
}
